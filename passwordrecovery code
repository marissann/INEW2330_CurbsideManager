using EmailValidation;
using MailKit.Net.Smtp;
using MimeKit;
using System;
using System.Windows.Forms;

namespace SMB3_Curbside_Manager
{
    public partial class frmPasswordRecovery : Form
    {
        public frmPasswordRecovery()
        {
            InitializeComponent();
        }
         

        private void frmPasswordRecovery_Load(object sender, EventArgs e)
        {
            //should anything happen here?
            lblEmailRecoveryError.Visible = false;
        }


        private void btnRecovery_Click(object sender, EventArgs e)
        {
            string email = tbxEmailRecovery.Text;

            

            //validate userInfo to see if it's in correct format
            if (tbxEmailRecovery.Text.Trim() == String.Empty || tbxEmailRecovery.Text.Length > 50 || !EmailValidator.Validate(tbxEmailRecovery.Text.Trim(), true, true))
            {
              lblEmailRecoveryError.Visible = true;
                //  btnRecovery.Visible = false;  //make the send email button greyed out so they can't use it if the 
                //email isn't accurate AND clear the textbox

            //    tbxEmailRecovery.Clear();  --but I don't want it to clear the textbox if i press the recover button, only if the input is incorrect and they go to re-enter their email
            }
            else
            {
                frmPasswordRecovery ms = new frmPasswordRecovery();

                ms.sendMessage("smb3curbsidemanager@gmail.com","Test", "Yup" );
             //   lblEmailRecoveryError.Visible = false;

            }
        }

         string from = "smb3curbsidemanager@gmail.com";
         string password = "smb33815294";

        public void sendMessage(string to, string subject, string bodyText)
        {
            

            MimeMessage message = new MimeMessage();
            message.From.Add(new MailboxAddress(from));
            message.To.Add(new MailboxAddress(to));
            message.Subject = subject;

            message.Body = new TextPart("plain")
            {
                Text = bodyText
            };

            using (var client = new SmtpClient())
            {
                //demo, no validation
                client.ServerCertificateValidationCallback = (s, c, h, e) => true;

                client.Connect("smtp.gmail.com", 587, MailKit.Security.SecureSocketOptions.StartTls);
                
                
                
//**COME BACK TO THIS PART**                                       *****<<
                client.Authenticate(from, );


                client.Send(message);
                client.Disconnect(true);
                client.Dispose();





                //    // do stuff...

                //    client.Disconnect(true);
                //}


                // SmtpClient client = new SmtpClient();
                //client.Connect("smtp.gmail.com", 587, true);
                //client.Authenticate("smb3curbsidemanager@gmail.com", "smb33815294");

                //client.Send(message);
                //client.Disconnect(true);
                //client.Dispose();
            }


        }

        //  smb3curbsidemanager@gmail.com  smb33815294

        //how to access gmail using mailkit


  
        private void tbxEmailRecovery_TextChanged(object sender, EventArgs e)
        {
            //may need this later but i changed my mind on what i was going to put here
           

            lblEmailRecoveryError.Visible = false;
            
        }

        private void btnLogin_Click(object sender, EventArgs e)
        {
            //returns user to login screen (closes this one)
            this.Close();
           
        }
    }
}
